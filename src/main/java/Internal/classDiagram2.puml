@startuml
'https://plantuml.com/class-diagram

interface AccountService {
    +createAccount();
    +deposit();
    +withdrow();
    +addInterest();
    +buildReport();
    +sendNotification();
}

abstract AccountServiceApplicationFactory{
    +{abstract}buildReport()
    +{abstract}init();
    +{abstract}createConcreteAccount()
    +deposit();
    +withdrow();
    +addInterest();
    +getAllAccounts();
    +getAccount();
    +sendNotification();
}

class Invoker {}
interface CommandInterface{
    +getTitle();
    +setParams();
    +execute();
}

CommandInterface <|.. ReportCommand
CommandInterface <|.. AddInterestCommand


Invoker --> CommandInterface
ApplicationFrm --> Invoker
ApplicationFrm --> AccountServiceApplicationFactory

CardFrm --> Invoker
CardFrm --> AccountServiceApplicationFactory

class CreditCarApplication {
    +createCommand();
    +buildReport();
    +createConcreteAccount();
    +init();
}

class BankServiceApplication {
    +createCommand();
    +buildReport();
    +createConcreteAccount();
    +init();
}

interface StorageFactory {
    +getAccountDAO();
    +getCustomerDAO();
    +getAccountEntryDAO();
}
StorageFactory --> AccountDAO
StorageFactory --> CustomerDAO
StorageFactory --> AccountEntryDAO
interface AccountDAO {
    +saveAccount()
    +updateAccount()
    +getAccounts()
    +getEntries()
    +loadAccount()
}

interface CustomerDAO {
    +saveCustomer()
    +updateCustomer();
    +getCustomers();
    +loadCustomer();
}
interface AccountEntryDAO {
    +saveAccountEntry();
    +updateAccountEntry();
    +getAccountEntries();
    +loadAccountEntries();
}

interface CommonDAO {
    +save();
    +update();
    +getAll();
    +load();
}
class CommonDAOMemoryImplementation
CommonDAOMemoryImplementation ..|> CommonDAO

AccountDAOMemoryImplementation ..|> AccountDAO
AccountDAOMemoryImplementation --> CommonDAOMemoryImplementation

CustomerDAOMemoryImplementation ..|> CustomerDAO
CustomerDAOMemoryImplementation --> CommonDAOMemoryImplementation

AccountEntryDAOMemoryImplementation ..|> AccountEntryDAO
AccountEntryDAOMemoryImplementation --> CommonDAOMemoryImplementation

'new Account product with subclasses
abstract Account{
+getinterest
+getInterestState
+addInterest()
+deposit(double amount)
+withdraw(double amount)
+addEntry(AccountEntry entry)
+getCustomer()
+getAccountType()
}
class CheckingAccount
class SavingAccount


 interface InterestCalculator{
 calcInterest()
 interestRateValue();
 }
 class PersonalSavingInterestCalculator{
 calcInterest()
 }
 class PersonalCheckingInterestCalculator{
 calcInterest()
 }
 class CompanySavingInterestCalculator{
 calcInterest()
 }
 class CompanyCheckingInterestCalculator{
 calcInterest()
 }
 class BronzeInterestCalculator
 class GoldInterestCalculator
 class SilverInterestCalculator

BronzeInterestCalculator ..|> InterestCalculator
SilverInterestCalculator ..|> InterestCalculator
GoldInterestCalculator ..|> InterestCalculator

interface MinimumPaymentStrategy {
    +calculateMinimumPayment();
    +minimumPaymentRateValue();
}

BronzeMinimumStrategy ..|> MinimumPaymentStrategy
SilverMinimumStrategy..|> MinimumPaymentStrategy
GoldMinimumStrategy..|> MinimumPaymentStrategy


CreditCardAccount --|> Account
BronzeAccount --|>CreditCardAccount
SilverAccount --|> CreditCardAccount
GoldAccount --|> CreditCardAccount

CreditCardAccount --> MinimumPaymentStrategy
 interface state{
 handleInterest()
 }

 class lowInterestState{
 handleInterest()
 }
 class midInterestState{
 handleInterest()
 }
 class highInterestState{
 handleInterest()
 }

'diagram
CheckingAccount --|> Account
SavingAccount --|> Account


'Observer pattern for notifiyer
interface StateNotifyer {
    +registerObserver();
    +removeOberver();
    +sendNotification();
}

Interface Observer {
    +update();
}


class CreditCardEmailSender

Observer .. StateNotifyer
CreditCardEmailSender ..|> Observer
CreditCardEmailSender <--BankServiceApplication
BankEmailSender <--CreditCarApplication
BankEmailSender ..|> Observer

AccountServiceApplicationFactory ..|> StateNotifyer


AccountServiceApplicationFactory ..|> AccountService
BankServiceApplication --|> AccountServiceApplicationFactory
CreditCarApplication --|> AccountServiceApplicationFactory

AccountServiceApplicationFactory --> StorageFactory
Account <-- AccountServiceApplicationFactory

 Account -->InterestCalculator
Account --> state
  lowInterestState ..|> state
  midInterestState ..|> state
  highInterestState ..|> state
 InterestCalculator <|..PersonalSavingInterestCalculator
 InterestCalculator <|..PersonalCheckingInterestCalculator
 InterestCalculator <|..CompanySavingInterestCalculator
 InterestCalculator <|..CompanyCheckingInterestCalculator

@enduml